{"version":3,"sources":["components/Contacts/Contacts.module.css","components/Filter/Filter.module.css","components/Section/Section.module.css","store/contacts/slice.js","store/store.js","components/Contacts/Contacts.js","components/Form/Form.js","components/Section/Section.js","components/Filter/Filter.js","App.js","index.js","components/Form/Form.module.css"],"names":["module","exports","itemsSlice","createSlice","name","initialState","reducers","addContact","state","payload","deleteContact","filter","id","filterSlice","setFilter","_","actions","contactsReducer","combineReducers","items","reducer","contactsPersistConfig","key","storage","blacklist","rootReducer","contacts","persistReducer","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistor","persistStore","Contacts","onRemoveClick","map","number","className","s","item","paragraph","button","onClick","type","Form","onSubmitContact","useState","setName","setNumber","handleChange","e","target","value","onSubmit","preventDefault","nanoid","wrapper","label","htmlFor","input","onChange","pattern","title","autoComplete","required","Section","children","section","Filter","App","useSelector","dispatch","useDispatch","normalizeFilter","toLowerCase","filteredContacts","contact","includes","newContact","find","alert","length","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,KAAO,uBAAuB,UAAY,4BAA4B,OAAS,2B,mBCAjGD,EAAOC,QAAU,CAAC,QAAU,wBAAwB,MAAQ,sBAAsB,MAAQ,wB,mBCA1FD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,qICCvDC,EAAaC,YAAY,CAC7BC,KAAM,QACNC,aAAc,GACdC,SAAU,CACRC,WADQ,SACGC,EADH,GACwB,IAAZC,EAAW,EAAXA,QAClB,MAAM,GAAN,mBAAWD,GAAX,CAAkBC,KAEpBC,cAJQ,SAIMF,EAJN,GAI2B,IAAZC,EAAW,EAAXA,QACrB,OAAO,YAAID,GAAOG,QAAO,qBAAGC,KAAgBH,SAK5CI,EAAcV,YAAY,CAC9BC,KAAM,SACNC,aAAc,GACdC,SAAU,CACRQ,UADQ,SACEC,EADF,GAEN,OADwB,EAAXN,YAMnB,EAAsCP,EAAWc,QAGpCA,EAAU,CACrBT,WAJF,EAAQA,WAKNG,cALF,EAAoBA,cAMlBI,UALoBD,EAAYG,QAA1BF,WAQKG,EAAkBC,YAAgB,CAC7CC,MAAOjB,EAAWkB,QAClBT,OAAQE,EAAYO,U,eCtBhBC,EAAwB,CAC5BC,IAAK,WACLC,Q,OAAAA,EACAC,UAAW,CAAC,WAGRC,EAAcP,YAAgB,CAClCQ,SAAUC,YAAeN,EAAuBJ,KAGrCW,EAAQC,YAAe,CAClCT,QAASK,EACTK,WAAY,SAAAC,GAAoB,OAC9BA,EAAqB,CACnBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAGhEC,UAAUC,IAGCC,EAAYC,YAAaf,G,sCChCvB,SAASgB,EAAT,GAAgD,IAA5BlB,EAA2B,EAA3BA,SAAUmB,EAAiB,EAAjBA,cAC3C,OACE,6BACGnB,EAASoB,KAAI,YAA2B,IAAxBlC,EAAuB,EAAvBA,GAAIR,EAAmB,EAAnBA,KAAM2C,EAAa,EAAbA,OACzB,OACE,qBAAIC,UAAWC,IAAEC,KAAe9C,KAAMA,EAAtC,UACE,oBAAG4C,UAAWC,IAAEE,UAAhB,UACE,+BAAO/C,IACP,+BAAO2C,OAET,wBACEC,UAAWC,IAAEG,OACbC,QAAS,kBAAMR,EAAcjC,IAC7B0C,KAAK,SAHP,sBAL0B1C,Q,oCCHvB,SAAS2C,EAAT,GAAoC,IAApBC,EAAmB,EAAnBA,gBAC7B,EAAwBC,mBAAS,IAAjC,mBAAOrD,EAAP,KAAasD,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOV,EAAP,KAAeY,EAAf,KAEA,SAASC,EAAaC,GACpB,MAAwBA,EAAEC,OAAlB1D,EAAR,EAAQA,KAAM2D,EAAd,EAAcA,MAEd,OAAQ3D,GACN,IAAK,OACHsD,EAAQK,GACR,MACF,IAAK,SACHJ,EAAUI,GACV,MACF,QACE,QAiBN,OACE,uBAAMC,SAdR,SAAsBH,GACpBA,EAAEI,iBACF,IAAMrD,EAAKsD,YAAO,IAElBV,EADmB,CAAE5C,KAAIR,OAAM2C,WAM/BW,EAAQ,IACRC,EAAU,KAIV,UACE,sBAAKX,UAAWC,IAAEkB,QAAlB,UACE,uBAAOnB,UAAWC,IAAEmB,MAAOC,QAAQ,OAAnC,mBAGA,uBACErB,UAAWC,IAAEqB,MACbP,MAAO3D,EACPmE,SAAUX,EACVN,KAAK,OACL1C,GAAG,OACHR,KAAK,OACLoE,QAAQ,yHACRC,MAAM,8HACNC,aAAa,MACbC,UAAQ,OAGZ,sBAAK3B,UAAWC,IAAEkB,QAAlB,UACE,uBAAOnB,UAAWC,IAAEmB,MAAOC,QAAQ,SAAnC,oBAGA,uBACErB,UAAWC,IAAEqB,MACbP,MAAOhB,EACPwB,SAAUX,EACVN,KAAK,MACL1C,GAAG,SACHR,KAAK,SACLoE,QAAQ,yFACRC,MAAM,+FACNE,UAAQ,OAIZ,wBAAQ3B,UAAWC,IAAEG,OAAQE,KAAK,SAAlC,4B,qBCtES,SAASsB,EAAT,GAAuC,IAApBH,EAAmB,EAAnBA,MAAOI,EAAY,EAAZA,SACvC,OACE,0BAAS7B,UAAWC,IAAE6B,QAAtB,UACE,oBAAI9B,UAAWC,IAAEwB,MAAjB,SAAyBA,IACxBI,K,qBCJQ,SAASE,EAAT,GAAsC,IAApBhB,EAAmB,EAAnBA,MAAOQ,EAAY,EAAZA,SACtC,OACE,sBAAKvB,UAAWC,IAAEkB,QAAlB,UACE,uBAAOnB,UAAWC,IAAEmB,MAAOC,QAAQ,SAAnC,mCAGA,uBACErB,UAAWC,IAAEqB,MACb1D,GAAG,SACHmD,MAAOA,EACPQ,SAAUA,OCNH,SAASS,IACtB,IAAMtD,EAAWuD,aAAY,SAAAzE,GAAK,OAAIA,EAAMkB,SAASP,SAC/CR,EAASsE,aAAY,SAAAzE,GAAK,OAAIA,EAAMkB,SAASf,UAC7CuE,EAAWC,cA0BjB,IAAMC,EAAkBzE,EAAO0E,cACzBC,EAAmB5D,EAASf,QAAO,SAAA4E,GAAO,OAC9CA,EAAQnF,KAAKiF,cAAcG,SAASJ,MAGtC,OACE,qCACE,cAACR,EAAD,CAASH,MAAM,YAAf,SACE,cAAClB,EAAD,CAAMC,gBApBZ,SAAuBiC,GAZvB,IAAoBF,EAad7D,EAASgE,MAAK,SAAAH,GAAO,OAAIA,EAAQnF,OAASqF,EAAWrF,QACvDuF,MAAM,GAAD,OAAIF,EAAWrF,KAAf,8BAdWmF,EAgBLE,EAfbP,EAASlE,EAAQT,WAAWgF,UAiC1B,cAACX,EAAD,CAASH,MAAM,WAAf,SACG/C,EAASkE,OAAS,EACjB,qCACE,cAACb,EAAD,CAAQhB,MAAOpD,EAAQ4D,SAjBjC,SAAsBV,GAZtB,IAAmBE,IAaPF,EAAEC,OAAOC,MAZnBmB,EAASlE,EAAQF,UAAUiD,OA6BnB,cAACnB,EAAD,CACElB,SAAU4D,EACVzC,cApCZ,SAAuBjC,GACrBsE,EAASlE,EAAQN,cAAcE,UAuCzB,mDC/CViF,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUnE,MAAOA,EAAjB,SACE,cAAC,IAAD,CAAaoE,QAAS,KAAMtD,UAAWA,EAAvC,SACE,cAACsC,EAAD,UAINiB,SAASC,eAAe,U,kBChB1BlG,EAAOC,QAAU,CAAC,QAAU,sBAAsB,MAAQ,oBAAoB,MAAQ,oBAAoB,OAAS,wB","file":"static/js/main.8abf0291.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Contacts_item__2IzQ1\",\"paragraph\":\"Contacts_paragraph__212v-\",\"button\":\"Contacts_button__186Lg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Filter_wrapper__2KtP2\",\"label\":\"Filter_label__FTCUg\",\"input\":\"Filter_input__1QO-n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__AwVtz\",\"title\":\"Section_title__2MC3w\"};","import { createSlice, combineReducers } from '@reduxjs/toolkit';\n\nconst itemsSlice = createSlice({\n  name: 'items',\n  initialState: [],\n  reducers: {\n    addContact(state, { payload }) {\n      return [...state, payload];\n    },\n    deleteContact(state, { payload }) {\n      return [...state].filter(({ id }) => id !== payload);\n    },\n  },\n});\n\nconst filterSlice = createSlice({\n  name: 'filter',\n  initialState: '',\n  reducers: {\n    setFilter(_, { payload }) {\n      return payload;\n    },\n  },\n});\n\nconst { addContact, deleteContact } = itemsSlice.actions;\nconst { setFilter } = filterSlice.actions;\n\nexport const actions = {\n  addContact,\n  deleteContact,\n  setFilter,\n};\n\nexport const contactsReducer = combineReducers({\n  items: itemsSlice.reducer,\n  filter: filterSlice.reducer,\n});\n","import { configureStore, combineReducers } from '@reduxjs/toolkit';\nimport { contactsReducer } from './contacts/slice';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst rootReducer = combineReducers({\n  contacts: persistReducer(contactsPersistConfig, contactsReducer),\n});\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n","import PropTypes from 'prop-types';\nimport s from './Contacts.module.css';\n\nexport default function Contacts({ contacts, onRemoveClick }) {\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => {\n        return (\n          <li className={s.item} key={id} name={name}>\n            <p className={s.paragraph}>\n              <span>{name}</span>\n              <span>{number}</span>\n            </p>\n            <button\n              className={s.button}\n              onClick={() => onRemoveClick(id)}\n              type=\"button\"\n            >\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nContacts.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { nanoid } from 'nanoid';\nimport s from './Form.module.css';\n\nexport default function Form({ onSubmitContact }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  function handleChange(e) {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const id = nanoid(10);\n    const newContact = { id, name, number };\n    onSubmitContact(newContact);\n    reset();\n  }\n\n  function reset() {\n    setName('');\n    setNumber('');\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className={s.wrapper}>\n        <label className={s.label} htmlFor=\"name\">\n          Name:\n        </label>\n        <input\n          className={s.input}\n          value={name}\n          onChange={handleChange}\n          type=\"text\"\n          id=\"name\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de d'Artagnan\"\n          autoComplete=\"off\"\n          required\n        />\n      </div>\n      <div className={s.wrapper}>\n        <label className={s.label} htmlFor=\"number\">\n          Phone:\n        </label>\n        <input\n          className={s.input}\n          value={number}\n          onChange={handleChange}\n          type=\"tel\"\n          id=\"number\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </div>\n\n      <button className={s.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nForm.propTypes = {\n  onSubmitContact: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nexport default function Section({ title, children }) {\n  return (\n    <section className={s.section}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  contact: PropTypes.element,\n};\n","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nexport default function Filter({ value, onChange }) {\n  return (\n    <div className={s.wrapper}>\n      <label className={s.label} htmlFor=\"filter\">\n        Find contacts by name\n      </label>\n      <input\n        className={s.input}\n        id=\"filter\"\n        value={value}\n        onChange={onChange}\n      ></input>\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { actions } from './store/contacts/slice';\nimport Contacts from './components/Contacts/Contacts';\nimport Form from './components/Form/Form';\nimport Section from './components/Section/Section';\nimport Filter from './components/Filter/Filter';\n\nexport default function App() {\n  const contacts = useSelector(state => state.contacts.items);\n  const filter = useSelector(state => state.contacts.filter);\n  const dispatch = useDispatch();\n\n  function addContact(contact) {\n    dispatch(actions.addContact(contact));\n  }\n\n  function deleteContact(id) {\n    dispatch(actions.deleteContact(id));\n  }\n\n  function setFilter(value) {\n    dispatch(actions.setFilter(value));\n  }\n\n  function getNewContact(newContact) {\n    if (contacts.find(contact => contact.name === newContact.name)) {\n      alert(`${newContact.name} is already in contacts.`);\n    } else {\n      addContact(newContact);\n    }\n  }\n\n  function handleFilter(e) {\n    setFilter(e.target.value);\n  }\n\n  const normalizeFilter = filter.toLowerCase();\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizeFilter),\n  );\n\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <Form onSubmitContact={getNewContact} />\n      </Section>\n      <Section title=\"Contacts\">\n        {contacts.length > 0 ? (\n          <>\n            <Filter value={filter} onChange={handleFilter} />\n            <Contacts\n              contacts={filteredContacts}\n              onRemoveClick={deleteContact}\n            />\n          </>\n        ) : (\n          <p>List is empty</p>\n        )}\n      </Section>\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './store/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Form_wrapper__oifDW\",\"label\":\"Form_label__3tJF7\",\"input\":\"Form_input__16Fef\",\"button\":\"Form_button__19rZp\"};"],"sourceRoot":""}