{"version":3,"sources":["components/Form/Form.module.css","components/Contacts/Contacts.js","components/Form/Form.js","components/Section/Section.js","components/Filter/Filter.js","App.js","index.js","components/Contacts/Contacts.module.css","components/Filter/Filter.module.css","components/Section/Section.module.css"],"names":["module","exports","Contacts","contacts","onRemoveClick","map","id","name","number","className","s","item","paragraph","button","onClick","type","Form","onSubmitContact","useState","setName","setNumber","handleChange","e","target","value","onSubmit","preventDefault","nanoid","wrapper","label","htmlFor","input","onChange","pattern","title","autoComplete","required","Section","children","section","Filter","App","setContacts","filter","setFilter","useEffect","JSON","parse","localStorage","getItem","setItem","stringify","normalizeFilter","toLowerCase","filteredContacts","contact","includes","newContact","find","alert","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f1992f1e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Form_wrapper__oifDW\",\"label\":\"Form_label__3tJF7\",\"input\":\"Form_input__16Fef\",\"button\":\"Form_button__19rZp\"};","import PropTypes from 'prop-types';\nimport s from './Contacts.module.css';\n\nexport default function Contacts({ contacts, onRemoveClick }) {\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => {\n        return (\n          <li className={s.item} key={id} name={name}>\n            <p className={s.paragraph}>\n              <span>{name}</span>\n              <span>{number}</span>\n            </p>\n            <button\n              className={s.button}\n              onClick={() => onRemoveClick(id)}\n              type=\"button\"\n            >\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nContacts.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { nanoid } from 'nanoid';\nimport s from './Form.module.css';\n\nexport default function Form({ onSubmitContact }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  function handleChange(e) {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const id = nanoid(10);\n    const newContact = { id, name, number };\n    onSubmitContact(newContact);\n    reset();\n  }\n\n  function reset() {\n    setName('');\n    setNumber('');\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className={s.wrapper}>\n        <label className={s.label} htmlFor=\"name\">\n          Name:\n        </label>\n        <input\n          className={s.input}\n          value={name}\n          onChange={handleChange}\n          type=\"text\"\n          id=\"name\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          autoComplete=\"off\"\n          required\n        />\n      </div>\n      <div className={s.wrapper}>\n        <label className={s.label} htmlFor=\"number\">\n          Phone:\n        </label>\n        <input\n          className={s.input}\n          value={number}\n          onChange={handleChange}\n          type=\"tel\"\n          id=\"number\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </div>\n\n      <button className={s.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nForm.propTypes = {\n  onSubmitContact: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nexport default function Section({ title, children }) {\n  return (\n    <section className={s.section}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  contact: PropTypes.element,\n};\n","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nexport default function Filter({ value, onChange }) {\n  return (\n    <div className={s.wrapper}>\n      <label className={s.label} htmlFor=\"filter\">\n        Find contacts by name\n      </label>\n      <input\n        className={s.input}\n        id=\"filter\"\n        value={value}\n        onChange={onChange}\n      ></input>\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport Contacts from './components/Contacts/Contacts';\nimport Form from './components/Form/Form';\nimport Section from './components/Section/Section';\nimport Filter from './components/Filter/Filter';\n\nexport default function App() {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    const contacts = JSON.parse(localStorage.getItem('contacts'));\n    if (contacts) {\n      setContacts(contacts);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  function getNewContact(newContact) {\n    if (contacts.find(contact => contact.name === newContact.name)) {\n      alert(`${newContact.name} is already in contacts.`);\n    } else {\n      setContacts([newContact, ...contacts]);\n    }\n  }\n\n  function removeContact(id) {\n    setContacts([...contacts].filter(contact => contact.id !== id));\n  }\n\n  function handleFilter(e) {\n    setFilter(e.target.value);\n  }\n\n  const normalizeFilter = filter.toLowerCase();\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizeFilter),\n  );\n\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <Form onSubmitContact={getNewContact} />\n      </Section>\n      <Section title=\"Contacts\">\n        {contacts.length > 0 ? (\n          <>\n            <Filter value={filter} onChange={handleFilter} />\n            <Contacts\n              contacts={filteredContacts}\n              onRemoveClick={removeContact}\n            />\n          </>\n        ) : (\n          <p>List is empty</p>\n        )}\n      </Section>\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Contacts_item__2IzQ1\",\"paragraph\":\"Contacts_paragraph__212v-\",\"button\":\"Contacts_button__186Lg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Filter_wrapper__2KtP2\",\"label\":\"Filter_label__FTCUg\",\"input\":\"Filter_input__1QO-n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__AwVtz\",\"title\":\"Section_title__2MC3w\"};"],"sourceRoot":""}